<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="3b7b2133aad05b1" failures="4" tests="15" name="Surefire test" time="0.802" errors="0" timestamp="2025-09-30T20:33:44 IST">
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@BeforeMethod setup" time="0.003">
    <failure type="com.company.scm.exception.EntityNotFoundException" message="W001">
      <![CDATA[com.company.scm.exception.EntityNotFoundException: W001
at com.company.scm.service.InventoryService.addStock(InventoryService.java:35)
at com.company.scm.service.InventoryServiceTest.setup(InventoryServiceTest.java:30)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@AfterMethod cleanup" time="-1.759244624077E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@BeforeMethod setup" time="-1.759244624077E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@AfterMethod cleanup" time="-1.759244624078E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@BeforeMethod setup" time="-1.759244624078E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@AfterMethod cleanup" time="-1.759244624079E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@BeforeMethod setup" time="-1.759244624079E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@AfterMethod cleanup" time="-1.759244624079E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@BeforeMethod setup" time="-1.759244624082E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@AfterMethod cleanup" time="-1.759244624083E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@BeforeMethod setup" time="-1.759244624083E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@AfterMethod cleanup" time="-1.759244624083E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@BeforeMethod setup" time="-1.759244624084E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@AfterMethod cleanup" time="-1.759244624084E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@BeforeMethod setup" time="-1.759244624085E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="@AfterMethod cleanup" time="-1.759244624085E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanup -->
  <testcase classname="com.company.scm.repository.ProductRepositoryTest" name="testFindAll" time="0.003"/>
  <testcase classname="com.company.scm.repository.ProductRepositoryTest" name="testFindById_NotFound" time="0.0"/>
  <testcase classname="com.company.scm.repository.ProductRepositoryTest" name="testFindById_Success" time="0.0"/>
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="testAddStockSuccess" time="0.0">
    <skipped/>
  </testcase> <!-- testAddStockSuccess -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="testAddStock_ZeroQuantity_ThrowsException" time="0.0">
    <skipped/>
  </testcase> <!-- testAddStock_ZeroQuantity_ThrowsException -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="testRemoveStockExceedingQuantity_ThrowsException" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveStockExceedingQuantity_ThrowsException -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="testRemoveStockSuccess" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveStockSuccess -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="testStockTransferUpdatesBothWarehouses" time="0.0">
    <skipped/>
  </testcase> <!-- testStockTransferUpdatesBothWarehouses -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="testStockTransferUpdatesBothWarehouses" time="0.0">
    <skipped/>
  </testcase> <!-- testStockTransferUpdatesBothWarehouses -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="testStockTransferUpdatesBothWarehouses" time="0.0">
    <skipped/>
  </testcase> <!-- testStockTransferUpdatesBothWarehouses -->
  <testcase classname="com.company.scm.service.InventoryServiceTest" name="testTransferStock_InvalidDestination_ThrowsException" time="0.0">
    <skipped/>
  </testcase> <!-- testTransferStock_InvalidDestination_ThrowsException -->
  <testcase classname="com.company.scm.service.OrderServiceTest" name="testFulfillSalesOrder_Success" time="0.003">
    <failure type="com.company.scm.exception.EntityNotFoundException" message="Inventory item for product P001 in warehouse W001 not found.">
      <![CDATA[com.company.scm.exception.EntityNotFoundException: Inventory item for product P001 in warehouse W001 not found.
at com.company.scm.service.InventoryService.removeStock(InventoryService.java:62)
at com.company.scm.service.OrderService.fulfillSalesOrder(OrderService.java:70)
at com.company.scm.service.OrderServiceTest.testFulfillSalesOrder_Success(OrderServiceTest.java:50)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- testFulfillSalesOrder_Success -->
  <testcase classname="com.company.scm.service.OrderServiceTest" name="testFulfillSalesOrder_InsufficientStock_ThrowsException" time="0.002">
    <failure type="org.testng.TestException" message="
Expected exception of type class com.company.scm.exception.InsufficientStockException but got com.company.scm.exception.EntityNotFoundException: Inventory item for product P001 in warehouse W001 not found.">
      <![CDATA[org.testng.TestException: 
Expected exception of type class com.company.scm.exception.InsufficientStockException but got com.company.scm.exception.EntityNotFoundException: Inventory item for product P001 in warehouse W001 not found.
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
Caused by: com.company.scm.exception.EntityNotFoundException: Inventory item for product P001 in warehouse W001 not found.
at com.company.scm.service.InventoryService.removeStock(InventoryService.java:62)
at com.company.scm.service.OrderService.fulfillSalesOrder(OrderService.java:70)
at com.company.scm.service.OrderServiceTest.testFulfillSalesOrder_InsufficientStock_ThrowsException(OrderServiceTest.java:66)
... 27 more
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- testFulfillSalesOrder_InsufficientStock_ThrowsException -->
  <testcase classname="com.company.scm.service.ReportServiceTest" name="testPrintInventoryReport" time="0.01">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at com.company.scm.service.ReportServiceTest.testPrintInventoryReport(ReportServiceTest.java:55)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testPrintInventoryReport -->
  <testcase classname="com.company.scm.service.ReportServiceTest" name="testPrintLowStockReport" time="0.002">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at com.company.scm.service.ReportServiceTest.testPrintLowStockReport(ReportServiceTest.java:65)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testPrintLowStockReport -->
</testsuite> <!-- Surefire test -->
